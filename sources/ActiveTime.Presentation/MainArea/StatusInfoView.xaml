<!--
ActiveTime
Copyright (C) 2011-2020 Dust in the Wind

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see<http://www.gnu.org/licenses/> .
-->

<UserControl
    x:Class="DustInTheWind.ActiveTime.Presentation.MainArea.StatusInfoView"
    x:ClassModifier="internal"
    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mainArea="clr-namespace:DustInTheWind.ActiveTime.Presentation.MainArea"

    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="300"
    d:DataContext="{d:DesignInstance mainArea:StatusInfoViewModel}">

    <StatusBar>

        <StatusBar.Style>
            <Style TargetType="StatusBar" BasedOn="{StaticResource {x:Type StatusBar}}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsRecorderStarted}" Value="True">
                        <Setter Property="Background" Value="{StaticResource StatusBarNormalBackground}"/>
                        <Setter Property="Foreground" Value="{StaticResource StatusBarNormalForeground}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsRecorderStarted}" Value="False">
                        <Setter Property="Background" Value="{StaticResource StatusBarOffBackground}"/>
                        <Setter Property="Foreground" Value="{StaticResource StatusBarOffForeground}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </StatusBar.Style>

        <StatusBar.ItemsPanel>
            <ItemsPanelTemplate>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                </Grid>
            </ItemsPanelTemplate>
        </StatusBar.ItemsPanel>

        <StatusBarItem
            Grid.Column="0"
            MinHeight="23"
            Content="{Binding Path=StatusText, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />

        <Separator Grid.Column="2"/>

        <StatusBarItem Grid.Column="3">
            <Button
                Padding="8 0"
                Command="{Binding ToggleRecorderCommand}"
                Background="Transparent"
                BorderThickness="0"
                Cursor="Hand">

                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRecorderStarted}" Value="True">
                                <Setter Property="Content" Value="Recorder is On"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsRecorderStarted}" Value="False">
                                <Setter Property="Content" Value="Recorder is Off"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

            </Button>
        </StatusBarItem>

    </StatusBar>

</UserControl>
 
 
 
